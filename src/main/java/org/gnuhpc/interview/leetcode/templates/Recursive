这个特指纯递归，这种的套路就是你实在不知道该怎么办了，就按照题意进行下一轮的构造，
写递归的技巧：明白一个函数的作用并相信它能完成这个任务，千万不要试图跳进细节。
然后传入同一个函数进行判断，优化的点就是memo search。

Lc相关题目：
294

二叉树的递归：
二叉树的递归遍历，只要包含如下代码，就可以了，而针对不同的题目，
我们会设置一些递归的返回值（包括终止条件），设计递归函数的参数，或者用外部变量记录的方式，来达到题目的要求。


def dfs(root):
    if not root: return
    dfs(root.left)
    dfs(root.right)
而返回值、参数、外部变量是不影响递归的进行的（只要有以上代码），这时候就是发挥人类智慧，开始设计递归的时候。
至少对于二叉树的递归，每个题目都可以这么想。

DFS的返回值能带的信息是从bottom到top构建的点，比如124这道题能带就是节点贡献的最大值，而543这道题就是节点贡献的半径值

LC相关题目
124，543

0. 综述
遍历方法	            顺序           	       应用
前序	                根 ➜ 左 ➜ 右		       想在节点上直接执行操作（或输出结果）使用先序
中序	                左 ➜ 根 ➜ 右		       在二分搜索树中，中序遍历的顺序符合从小到大（或从大到小）顺序的要输出排序好的结果使用中序
后序	                左 ➜ 右 ➜ 根		       后续遍历的特点是在执行操作时，肯定已经遍历过该节点的左右子节点，适用于进行破坏性操作，比如删除所有节点，比如判断树中是否存在相同子树
广度优先	            层序，横向访问           当树的高度非常高（非常瘦）使用广度优先节省空间
深度优先	            纵向，探底到叶子节点      当每个节点的子节点非常多（非常胖），使用深度优先遍历节省空间（访问顺序和入栈顺序相关，想当于先序遍历）

关于应用部分，选择遍历方法的基本的原则：更快的访问到你想访问的节点。先序会先访问根节点，后序会先访问叶子节点
需要说明的是，递归是一种拆分思维的具体问题类别的思维方法，其核心的思维动态规划非常类似，
都是假设子节点搞定了我现在应该干什么这个问题

前中后序非递归模板 见TreeTraverse.java


LC相关题目
100
1028
===============================

1. 前序遍历可以通过一个辅助结构记录遍历中的结果
LC相关题目：
865

2. 层次遍历为标准BFS
LC相关题目：

3. 前序遍历还有一种先压右边再压左边的做法,
    在修改二叉树结构的时候非常有用, 不会导致丢失另外做题的时候也比较好写

LC相关题目:
257

4. 后序还可以完成多个节点相关的问题,比如节点修改, 节点路径问题等
    一般从叶子节点一点点网上构造，看看能得到什么
LC相关题目
687
543
508
226

5. BST的前序遍历BST，第一个元素值为根节点，小于根节点的元素为左子树，大于根节点的元素为右子树。
   找出分界线（第一个比头部元素大的）然后递归求解一些题, 在递归中经常用low bound/high lound为参数构造函数
LC相关题目
449
108
98


6. BST的前序遍历迭代法中可以进行前后节点的操作
LC相关题目
530

7. BST最基本的概念+递归一般可以派上用场，
LC相关题目
450
776
701（注意使用返回的方式进行递归）
653
1214
285

8. BST的题目也不见得就一定要掉入BST特性的窠臼
LC相关题目
653

9. BST的中序遍历是有序的，这个是BST最基本的， 在中序遍历中可以记录前后的节点情况。而右中左反向中序遍历则是从大到小
LC相关题目
426 解法1
98 解法2和3
538

10. 如果想获得从叶子节点到根节点的路径，使用前序遍历可以向一个结构的头部不断插入所遍历的元素得到。
LC相关题目
988

11. 前序和中序遍历的时候如何记录上一个遍历的节点，用一个全局变量pre，这一点对于递归还是非递归都一样。
而后续遍历不需要，但是要提前将left和right记录出来

这是个小套路，一般设置一个 TreeNode prev = null;
然后套traverse的框架， 在处理节点时判断prev不是null，则进行判断操作。
不断prev是不是null都记得将prev指向root向后走。

当然如果需要记录遍历到第几个，也可以设置一个全局的count在遍历到节点处理时进行计数。

总之，脑子中要有一个游标在节点中游走，在处理节点的时候该调整游标就调整游标(879)，该计数计数

LC相关题目
426 解法2和3
114 解法1和3
98 解法3
230 解法1
879

12. 从节点往上遍历一般都采用后序遍历
    框架是
        if (root == null) return 0;
        dfs(root.left);
        dfs(root.right);

        处理
        更新全局
        逐层返回

LC相关题目
545
298
124

13. BFS在逐层遍历的时候可以再记录一个queue进行计数或者是记录路径和等操作
LC相关题目
298 解法3
112 解法2

14. 树的DFS遍历需要计算极值的时候可以使用全局变量记录
LC相关题目
559 解法1
104 解法2
965 解法1

15. 树的遍历判断需要快速返回的，则在递归前就快速返回错误进行剪枝
LC相关题目
110

16. 树的三种标准遍历不管是什么方法，都是右节点后于左节点进行，注意这个特性，可以用一个map对应层数进行遍历记录
LC相关题目
119 解法3


17. 判断两个结构的树的题目一般都是递归，而且是双层递归，先定住一点，然后往下递归。注意判断条件
LC相关题目
1367
572

18. 对于树的对称、相等等，都可以用Inorder
LC相关题目
101 解法2

19. 前序遍历中可以使用全局变量进行解析
LC相关题目
297 解法2
1028 解法2

20. BFS还可以配置一个求和的队列一起往下BFS

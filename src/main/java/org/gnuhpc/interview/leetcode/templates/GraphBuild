图的构建

1. 有向有权图
// g[A][B] = k -> A / B = k
Map<String, Map<String, Double>> g = new HashMap<>();

2. 无向有权图
Map<String, Map<String, Double>> g = new HashMap<>();
由于是无向的，因此A-B和B-A都要放进去

3. 有向无权图
Map<String, List<String>> g = new HashMap<>();

4. 无向无权图
Map<String, List<String>> g = new HashMap<>();
由于是无向的，因此A-B和B-A都要放进去

LC相关题目
399

5. 树的无向无权图构建
    public void dfs(Map<TreeNode, List<TreeNode>> graph, TreeNode node, TreeNode parent) {
        if (node != null) {
            if (!graph.containsKey(node)) graph.put(node, new LinkedList<TreeNode>());
            if (!graph.containsKey(parent)) graph.put(parent, new LinkedList<TreeNode>());
            graph.get(node).add(parent);
            graph.get(parent).add(node);
            dfs(graph, node.left, node);
            dfs(graph, node.right, node);
        }
    }
LC 相关题目
742


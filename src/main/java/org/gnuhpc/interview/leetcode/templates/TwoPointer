双指针

1. 同向不定长指针模板，也就是滑动窗口问题

都从一边开始，l和r都是0，然后r往外扩展，到达一定条件后l往里缩，不满足一定条件后r继续往外扩展
如果求最长的子串，则在内循环后边更新结果，如果求最短的子串，则在内循环里面更新结果.

计数扣成负数也没有关系，代表欠的个数

时间复杂度是 O(M + N)

套路模板：
		int[] map = new int[128];

		int counter; // check wether the subtring is valid
		int begin = 0, end = 0; // two pointers, one point to head and one to tail
		int len; //the length of the substring

		char[] chS = s.toCharArray();
		for {
			/* initilize the hash map here */
		}

		while (end < s.length()) {

			if (map[chS[end++]]-- ?) {
				/* modify  counter here */
			}

			while (/* counter condition */) {
				/* update here if find minimum */

				//increase begin to make it invalid/valid again

				if (map[chS[begin++]]++ ?) {
					/* modify counter here */
				}
			}

			/* update d here if find maximum */
		}

		return d // Also be cautious about return conditions. There may be some corner case

LC相关题目
76
438 (方法二是双指针比较数据法，这个比较特殊)
159
3
30
424
340
159

2. 同向快慢指针模板,这种一般是链表，也有数组的
while (fast != null && fast.next != null) {
    fast = fast.next.next;
    slow = slow.next;
}
// slow 就在中间位置
return slow;

LC相关题目
141
142
876
19
26
82

3. 从节点向两边扩展，边扩展边进行计算，一般都是求最长的，中心有特点的
LC相关题目
845
5

4. 双指针对撞：
LC相关题目
167
344
151解法二
186

5. 有时会和presum进行综合考察
LC相关题目
346

